---
// Features.astro - Display the key features of Bomfather with horizontal scroll effect
---

<section id="features-section" class="relative bg-background py-24 text-white">
  <div class="features-container container">
    <!-- Section Header - Now outside the sticky container -->
    <div id="features-header" class="text-center mb-20 w-full max-w-4xl mx-auto px-4 text-white">
      <h2 class="text-3xl md:text-4xl font-bold font-heading mb-6">Key Features</h2>
      <p class="text-lg text-gray max-w-3xl mx-auto">
        Bomfather offers unique capabilities to secure your AI systems through kernel-level monitoring, Runtime-AIBOM creation, and active protection.
      </p>
    </div>
    
    <!-- Sticky container - Adjust positioning and height -->
    <div id="features-sticky-container" class="sticky top-24 left-0 w-full flex flex-col justify-center items-center pt-16 pb-16">
      <!-- Single feature display container - features will be moved in and out of this area -->
      <div id="feature-display-container" class="w-full max-w-3xl mx-auto px-4 relative h-64 md:h-48 overflow-hidden">
        <!-- Feature wrapper to allow horizontal positioning -->
        <div id="feature-slider" class="absolute w-[600%] flex">
          <!-- Feature 1 -->
          <div class="feature-item w-[16.666%] flex-shrink-0 flex items-start pr-4">
            <div class="feature-number mr-6 md:mr-10 flex-shrink-0">
              <div class="w-16 h-16 bg-primary text-white rounded-full flex items-center justify-center text-2xl font-bold">01</div>
            </div>
            <div class="feature-content">
              <h3 class="text-2xl md:text-3xl font-bold mb-4">Kernel-Level Monitoring</h3>
              <p class="text-lg text-gray">
                Continuous monitoring at the kernel level using eBPF, ensuring complete visibility of all AI system activities at runtime.
              </p>
            </div>
          </div>
          
          <!-- Feature 2 -->
          <div class="feature-item w-[16.666%] flex-shrink-0 flex items-start pr-4">
            <div class="feature-number mr-6 md:mr-10 flex-shrink-0">
              <div class="w-16 h-16 bg-primary text-white rounded-full flex items-center justify-center text-2xl font-bold">02</div>
            </div>
            <div class="feature-content">
              <h3 class="text-2xl md:text-3xl font-bold mb-4">Runtime-AIBOM Creation</h3>
              <p class="text-lg text-gray">
                Generates Runtime AI Bills of Materials with Merkle tree hashing for tamper-evident records while protecting sensitive data and model parameters.
              </p>
            </div>
          </div>
          
          <!-- Feature 3 -->
          <div class="feature-item w-[16.666%] flex-shrink-0 flex items-start pr-4">
            <div class="feature-number mr-6 md:mr-10 flex-shrink-0">
              <div class="w-16 h-16 bg-primary text-white rounded-full flex items-center justify-center text-2xl font-bold">03</div>
            </div>
            <div class="feature-content">
              <h3 class="text-2xl md:text-3xl font-bold mb-4">Active Threat Prevention</h3>
              <p class="text-lg text-gray">
                Block malicious accesses in real-time with a trust-based model where users define trusted files and all other accesses are automatically prevented.
              </p>
            </div>
          </div>
          
          <!-- Feature 4 -->
          <div class="feature-item w-[16.666%] flex-shrink-0 flex items-start pr-4">
            <div class="feature-number mr-6 md:mr-10 flex-shrink-0">
              <div class="w-16 h-16 bg-primary text-white rounded-full flex items-center justify-center text-2xl font-bold">04</div>
            </div>
            <div class="feature-content">
              <h3 class="text-2xl md:text-3xl font-bold mb-4">GPU Monitoring</h3>
              <p class="text-lg text-gray">
                Track CUDA activities, data transfers between CPU and GPU memory, execution patterns, and unusual resource allocation that could indicate tampering.
              </p>
            </div>
          </div>
          
          <!-- Feature 5 -->
          <div class="feature-item w-[16.666%] flex-shrink-0 flex items-start pr-4">
            <div class="feature-number mr-6 md:mr-10 flex-shrink-0">
              <div class="w-16 h-16 bg-primary text-white rounded-full flex items-center justify-center text-2xl font-bold">05</div>
            </div>
            <div class="feature-content">
              <h3 class="text-2xl md:text-3xl font-bold mb-4">Minimal Overhead</h3>
              <p class="text-lg text-gray">
                Optimized eBPF-based implementation with only 2-3% performance impact, ensuring AI workflows remain efficient while being secured.
              </p>
            </div>
          </div>
          
          <!-- Feature 6 -->
          <div class="feature-item w-[16.666%] flex-shrink-0 flex items-start pr-4">
            <div class="feature-number mr-6 md:mr-10 flex-shrink-0">
              <div class="w-16 h-16 bg-primary text-white rounded-full flex items-center justify-center text-2xl font-bold">06</div>
            </div>
            <div class="feature-content">
              <h3 class="text-2xl md:text-3xl font-bold mb-4">No Workflow Changes</h3>
              <p class="text-lg text-gray">
                Bomfather operates at the kernel level, so existing AI workflows don't need to be modified to gain runtime security benefits.
              </p>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Progress indicator - remains inside the sticky container -->
      <div id="features-progress" class="w-full flex justify-center gap-3 mt-10">
        <div class="progress-dot h-3 w-3 rounded-full bg-primary cursor-pointer" data-index="0"></div>
        <div class="progress-dot h-3 w-3 rounded-full bg-primary/30 cursor-pointer" data-index="1"></div>
        <div class="progress-dot h-3 w-3 rounded-full bg-primary/30 cursor-pointer" data-index="2"></div>
        <div class="progress-dot h-3 w-3 rounded-full bg-primary/30 cursor-pointer" data-index="3"></div>
        <div class="progress-dot h-3 w-3 rounded-full bg-primary/30 cursor-pointer" data-index="4"></div>
        <div class="progress-dot h-3 w-3 rounded-full bg-primary/30 cursor-pointer" data-index="5"></div>
      </div>
    </div>
    
    <!-- Segments to trigger scroll animations - Adjust height if needed -->
    <div id="features-segments">
      <div class="feature-segment h-[35vh]" data-index="0"></div>
      <div class="feature-segment h-[35vh]" data-index="1"></div>
      <div class="feature-segment h-[35vh]" data-index="2"></div>
      <div class="feature-segment h-[35vh]" data-index="3"></div>
      <div class="feature-segment h-[35vh]" data-index="4"></div>
      <div class="feature-segment h-[35vh]" data-index="5"></div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    initFeaturesAnimation();
  });
  
  async function initFeaturesAnimation() {
    try {
      // Dynamic import of GSAP and ScrollTrigger
      const { gsap } = await import('gsap');
      let ScrollTrigger;
      
      try {
        ScrollTrigger = (await import('gsap/ScrollTrigger')).ScrollTrigger;
        gsap.registerPlugin(ScrollTrigger);
        
        // Animate the header (now scrolls normally)
        gsap.from("#features-header", {
          opacity: 0,
          y: -20,
          duration: 0.8,
          scrollTrigger: {
            trigger: "#features-section",
            start: "top 80%",
            toggleActions: "play none none none"
          }
        });
        
        // Get elements needed for scroll animation
        const progressDots = document.querySelectorAll('.progress-dot');
        const featureSlider = document.querySelector('#feature-slider');
        const featureItems = document.querySelectorAll('.feature-item');
        const featureSegments = document.querySelectorAll('.feature-segment');
        
        // Number of features
        const featureCount = featureItems.length;
        
        // Set the active progress dot
        const setActiveDot = (index) => {
          progressDots.forEach((dot, i) => {
            if (i === index) {
              dot.classList.add('bg-primary');
              dot.classList.remove('bg-primary/30');
            } else {
              dot.classList.remove('bg-primary');
              dot.classList.add('bg-primary/30');
            }
          });
        };
        
        // Ensure all items are visible
        featureItems.forEach(item => {
          item.style.visibility = 'visible';
          item.style.opacity = '1';
        });
        
        // Set initial position (first feature is visible)
        gsap.set(featureSlider, { x: '0%' });
        setActiveDot(0);
        
        // Create scroll triggers for each segment with consistent triggering
        featureSegments.forEach((segment, index) => {
          ScrollTrigger.create({
            trigger: segment,
            start: "top 70%", // More consistent trigger point
            end: "bottom 30%", // More consistent end point
            onEnter: () => {
              gsap.to(featureSlider, {
                x: `${-16.666 * index}%`,
                duration: 0.6,
                ease: "power2.out"
              });
              setActiveDot(index);
            },
            onEnterBack: () => {
              gsap.to(featureSlider, {
                x: `${-16.666 * index}%`,
                duration: 0.6,
                ease: "power2.out"
              });
              setActiveDot(index);
            }
          });
        });
        
        // Add click functionality to dots for direct navigation
        progressDots.forEach((dot, index) => {
          dot.addEventListener('click', () => {
            // Calculate the x position for this feature
            const xPosition = index * -16.666 + '%';
            
            // Animate to the new position
            gsap.to(featureSlider, {
              x: xPosition,
              duration: 0.6,
              ease: "power2.out"
            });
            
            // Update active dot
            setActiveDot(index);
            
            // Scroll to the corresponding segment with offset to trigger the animation
            const yOffset = window.innerHeight * 0.3; // 30% of viewport height
            const top = featureSegments[index].getBoundingClientRect().top + window.pageYOffset - yOffset;
            window.scrollTo({top, behavior: 'smooth'});
          });
        });
        
      } catch (error) {
        console.warn('ScrollTrigger not available, using fallback animation', error);
        
        // Simple fallback
        const headerEl = document.querySelector('#features-header');
        const featureSlider = document.querySelector('#feature-slider');
        const progressDots = document.querySelectorAll('.progress-dot');
        
        gsap.to(headerEl, { opacity: 1, y: 0, duration: 0.5 });
        gsap.set(featureSlider, { x: '0%' }); // Show the first feature
        
        // Make the first dot active
        progressDots[0].classList.add('bg-primary');
        progressDots[0].classList.remove('bg-primary/30');
        
        // Add click functionality to dots
        progressDots.forEach((dot, index) => {
          dot.addEventListener('click', () => {
            // Calculate the x position for this feature
            const xPosition = index * -16.666 + '%';
            
            // Animate to the new position
            gsap.to(featureSlider, {
              x: xPosition,
              duration: 0.6,
              ease: "power2.out"
            });
            
            // Update active dot
            progressDots.forEach((d, i) => {
              if (i === index) {
                d.classList.add('bg-primary');
                d.classList.remove('bg-primary/30');
              } else {
                d.classList.remove('bg-primary');
                d.classList.add('bg-primary/30');
              }
            });
          });
        });
      }
    } catch (error) {
      console.error('Error initializing feature animations:', error);
      // Fallback to make content visible
      document.querySelector('#features-header').style.opacity = 1;
      document.querySelector('#feature-slider').style.transform = 'translateX(0%)';
      const firstDot = document.querySelector('.progress-dot');
      if (firstDot) {
        firstDot.classList.add('bg-primary');
        firstDot.classList.remove('bg-primary/30');
      }
    }
  }
</script>
