---
// ContactUs.astro - Contact form and appointment scheduling component
---

<section class="py-16 bg-white">
  <div class="container">
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold font-heading mb-4">Get in Touch</h2>
      <p class="text-lg text-mid-gray max-w-3xl mx-auto">
        Have questions about Bomfather? Reach out to our team or schedule a demo.
      </p>
    </div>
    
    <div class="grid md:grid-cols-2 gap-8 lg:gap-12">
      <!-- Contact Form -->
      <div class="bg-light-gray p-8 rounded-lg">
        <h3 class="text-2xl font-bold text-primary mb-6">Send us a Message</h3>
        
        <form id="contact-form" class="space-y-6" name="contact" method="POST" data-netlify="true">
          <!-- Netlify Forms hidden field -->
          <input type="hidden" name="form-name" value="contact" />
          
          <div>
            <label for="name" class="block text-mid-gray mb-2">Name</label>
            <input 
              type="text" 
              id="name" 
              name="name" 
              required
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
            />
          </div>
          
          <div>
            <label for="email" class="block text-mid-gray mb-2">Email</label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              required
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
            />
          </div>
          
          <div>
            <label for="subject" class="block text-mid-gray mb-2">Subject</label>
            <input 
              type="text" 
              id="subject" 
              name="subject"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
            />
          </div>
          
          <div>
            <label for="message" class="block text-mid-gray mb-2">Message</label>
            <textarea 
              id="message" 
              name="message" 
              rows="4" 
              required
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
            ></textarea>
          </div>
          
          <div class="text-sm text-mid-gray mb-4">
            <p>This form uses Netlify Forms. Your message will be securely delivered to the site administrators.</p>
          </div>
          
          <button 
            type="submit" 
            class="w-full bg-primary hover:bg-primary/90 text-white font-medium py-3 px-6 rounded-lg transition-colors"
          >
            Send Message
          </button>
        </form>
        
        <div id="form-success" class="hidden mt-4 p-4 bg-accent-green/20 text-accent-green rounded-lg">
          Thank you for your message! We'll get back to you as soon as possible.
        </div>
        
        <div id="form-error" class="hidden mt-4 p-4 bg-accent-red/20 text-accent-red rounded-lg">
          There was an error sending your message. Please try again later.
        </div>
      </div>
      
      <!-- Calendar Booking -->
      <div class="bg-light-gray p-8 rounded-lg">
        <h3 class="text-2xl font-bold text-primary mb-6">Schedule a Meeting</h3>
        <p class="mb-6 text-mid-gray">
          Book a time slot with our team for a demo, consultation, or to discuss how Bomfather can help secure your software supply chain.
        </p>
        
        <div class="bg-white p-6 rounded-lg border border-gray-200">
          <h4 class="font-bold mb-3">Google Calendar Appointment Scheduling</h4>
          <p class="text-mid-gray mb-4">
            To implement Google Calendar appointment scheduling on your website, follow these steps:
          </p>
          <ol class="list-decimal list-inside space-y-2 text-mid-gray mb-4">
            <li class="mb-2">Open Google Calendar on your computer</li>
            <li class="mb-2">Click "Create" button at the top left</li>
            <li class="mb-2">Select "Appointment schedule"</li>
            <li class="mb-2">Enter a title, duration, and your availability</li>
            <li class="mb-2">Click "Next" and customize your meeting settings</li>
            <li class="mb-2">Click "Save" to create your appointment schedule</li>
            <li class="mb-2">On your Calendar grid, click the newly created appointment schedule</li>
            <li class="mb-2">Next to "Open booking page," click the Share icon</li>
            <li class="mb-2">Under "Website embed", select "Inline booking page"</li>
            <li class="mb-2">Copy the provided HTML code</li>
            <li>Replace the placeholder iframe code below with your copied embed code</li>
          </ol>

          <!-- Example of how the embed would look (with a placeholder src) -->
          <div class="border border-gray-200 p-4 rounded-lg bg-light-gray mt-6 mb-4">
            <p class="text-sm text-mid-gray mb-2 font-bold">Example Embed Code:</p>
            <pre class="bg-gray-800 text-white text-xs p-3 rounded overflow-x-auto"><code>&lt;iframe 
  src="https://calendar.google.com/calendar/appointments/schedules/YOUR_SCHEDULE_ID" 
  style="border: 0" 
  width="100%" 
  height="600" 
  frameborder="0"&gt;&lt;/iframe&gt;</code></pre>
          </div>
          
          <div class="mb-4 bg-primary/10 p-4 rounded-lg">
            <h5 class="font-bold mb-2">Benefits of Google Calendar Appointment Scheduling:</h5>
            <ul class="list-disc list-inside text-sm space-y-1 text-mid-gray">
              <li>Automatically updates to prevent scheduling conflicts</li>
              <li>Collects information from people when they book</li>
              <li>Sends confirmation emails to both parties</li>
              <li>Free for basic use (one booking page)</li>
              <li>Premium features available with Google Workspace subscriptions</li>
            </ul>
          </div>
          
          <p class="text-mid-gray mb-2">
            For now, please use the email contact option below to request a meeting until this feature is implemented.
          </p>
        </div>
        
        <div class="mt-6">
          <h4 class="font-bold mb-2">Contact Methods:</h4>
          <ul class="space-y-2 text-mid-gray">
            <li class="flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" />
                <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" />
              </svg>
              <a href="mailto:info@bomfather.org" class="hover:text-primary">info@bomfather.org</a>
            </li>
            <li class="flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 0C4.477 0 0 4.477 0 10c0 4.42 2.865 8.166 6.839 9.489.5.092.682-.217.682-.482 0-.237-.008-.866-.013-1.7-2.782.603-3.369-1.342-3.369-1.342-.454-1.155-1.11-1.462-1.11-1.462-.908-.62.069-.608.069-.608 1.003.07 1.531 1.03 1.531 1.03.892 1.529 2.341 1.087 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.11-4.555-4.943 0-1.091.39-1.984 1.029-2.683-.103-.253-.446-1.27.098-2.647 0 0 .84-.269 2.75 1.025A9.564 9.564 0 0110 1.777c.85.004 1.705.115 2.504.337 1.909-1.294 2.747-1.025 2.747-1.025.546 1.377.203 2.394.1 2.647.64.699 1.028 1.592 1.028 2.683 0 3.842-2.339 4.687-4.566 4.933.359.309.678.919.678 1.852 0 1.336-.012 2.415-.012 2.743 0 .267.18.578.688.48C17.14 18.163 20 14.418 20 10c0-5.523-4.477-10-10-10z" clip-rule="evenodd" />
              </svg>
              <a href="https://github.com/nathannaveen/bomfather" target="_blank" class="hover:text-primary">GitHub</a>
            </li>
            <li class="flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm0 2h10v7h-2l-1 2H8l-1-2H5V5z" clip-rule="evenodd" />
              </svg>
              <a href="https://twitter.com/bomfather" target="_blank" class="hover:text-primary">Twitter</a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Form handling with Netlify Forms
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contact-form');
    const successMessage = document.getElementById('form-success');
    const errorMessage = document.getElementById('form-error');
    
    if (form) {
      // For local development, just show success message
      if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
        form.addEventListener('submit', async (e) => {
          e.preventDefault();
          
          try {
            // Simulate form submission in development
            await new Promise(resolve => setTimeout(resolve, 1000));
            
            // Show success message
            if (successMessage) {
              successMessage.classList.remove('hidden');
              form.reset();
              
              // Hide success message after 5 seconds
              setTimeout(() => {
                successMessage.classList.add('hidden');
              }, 5000);
            }
          } catch (error) {
            // Show error message
            if (errorMessage) {
              errorMessage.classList.remove('hidden');
              
              // Hide error message after 5 seconds
              setTimeout(() => {
                errorMessage.classList.add('hidden');
              }, 5000);
            }
          }
        });
      } else {
        // In production with Netlify Forms
        // Handle the AJAX submission
        form.addEventListener('submit', async (e) => {
          e.preventDefault();
          
          try {
            // Get form data
            const formData = new FormData(form);
            
            // Submit the form data using fetch
            const response = await fetch('/', {
              method: 'POST',
              headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
              body: new URLSearchParams(formData).toString()
            });
            
            if (response.ok) {
              // Show success message
              if (successMessage) {
                successMessage.classList.remove('hidden');
                form.reset();
                
                // Hide success message after 5 seconds
                setTimeout(() => {
                  successMessage.classList.add('hidden');
                }, 5000);
              }
            } else {
              throw new Error('Network response was not ok');
            }
          } catch (error) {
            // Show error message
            if (errorMessage) {
              errorMessage.classList.remove('hidden');
              
              // Hide error message after 5 seconds
              setTimeout(() => {
                errorMessage.classList.add('hidden');
              }, 5000);
            }
          }
        });
      }
    }
  });
</script> 