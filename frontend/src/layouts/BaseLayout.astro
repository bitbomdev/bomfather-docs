---
import '../styles/global.css';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import AnnouncementBanner from '../components/AnnouncementBanner.astro';

export interface Props {
  title: string;
  description: string;
  showHeader?: boolean; // whether to render the navigation header, default true
  showAnnouncement?: boolean; // whether to render the announcement banner, default true
}

const { title, description, showHeader = true, showAnnouncement = true } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="color-scheme" content="dark">
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title} | Bomfather</title>
    
    <!-- Preload fonts -->
    <!-- Google Fonts: DM Sans (headings & body) + JetBrains Mono for code -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&family=JetBrains+Mono:wght@400;700&display=swap" rel="stylesheet">
    
    <!-- ConvertKit Form Script -->
    <script src="https://f.convertkit.com/ckjs/ck.5.js"></script>

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-DK3MD3RFN4"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-DK3MD3RFN4');
    </script>
  </head>
  <body class="bg-background text-mid-gray">
    {showAnnouncement ? <AnnouncementBanner /> : null}
    {showHeader ? <Header /> : null}
    
    <main>
      <slot />
    </main>
    
    <!-- Newsletter Subscription Form -->
    <section class="bg-background py-12 border-t border-white/20">
      <div class="container mx-auto px-4 text-center">
        <h2 class="text-3xl md:text-4xl font-bold font-heading mb-4 text-white">Kernel â†’ Sky Security Briefing</h2>
        <p class="text-lg text-gray mx-auto mb-8">From TPM-sealed flight recorders to zero-trust builds: deep dives on eBPF, AI & supply-chain security.</p>
        
        <div class="max-w-xl mx-auto">
          <div id="form-container">
            <form id="newsletter-form" class="bg-background p-6 rounded-lg border border-white/20 shadow-xl">
              <div class="flex flex-col md:flex-row gap-4 font-sans">
                <input 
                  type="email" 
                  id="email-input"
                  placeholder="Your email address" 
                  required 
                  class="w-full flex-1 px-4 py-3 border border-white/20 bg-background text-white rounded-lg focus:ring-2 focus:ring-primary focus:border-primary text-base"
                  style="min-width: 280px;"
                />
                <button 
                  type="submit"
                  class="md:w-auto md:whitespace-nowrap md:flex-shrink-0 bg-primary hover:bg-accent text-white font-medium px-8 py-3 rounded-lg transition-colors"
                >
                  Subscribe
                </button>
              </div>
            </form>
          </div>
          
          <div id="success-message" class="hidden bg-background p-8 rounded-lg border border-white/20 shadow-xl w-full mx-auto">
            <h3 class="text-xl text-white font-bold mb-3">Thank you for signing up!</h3>
            <p class="text-gray text-base mt-2">We've sent a confirmation email to your inbox.</p>
          </div>
        </div>
      </div>
    </section>
    
    <Footer />
    
    <!-- JavaScript for form handling -->
    <script>
      // Cache busting timestamp
      const timestamp = new Date().getTime();
      console.log('Form script loaded with timestamp:', timestamp);
      
      document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('newsletter-form');
        const formContainer = document.getElementById('form-container');
        const successMessage = document.getElementById('success-message');
        
        console.log('Form found:', !!form);
        
        if (form) {
          form.addEventListener('submit', async (e) => {
            e.preventDefault();
            console.log('Form submitted, timestamp:', timestamp);
            
            const emailInput = document.getElementById('email-input');
            const email = emailInput.value;
            
            if (!email) return;
            
            try {
              console.log('Submitting to Netlify function...');
              
              // Display submission attempt
              const submitBtn = form.querySelector('button[type="submit"]');
              const originalBtnText = submitBtn.innerHTML;
              submitBtn.innerHTML = 'Submitting...';
              submitBtn.disabled = true;
              
              // Add cache busting parameter to request URL
              const functionUrl = `/.netlify/functions/newsletter-subscribe?_=${timestamp}`;
              
              const response = await fetch(functionUrl, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Cache-Control': 'no-cache, no-store',
                  'Pragma': 'no-cache'
                },
                body: JSON.stringify({ 
                  email,
                  timestamp // Include timestamp in the request body as well
                }),
              });
              
              let responseText = await response.text();
              let result = JSON.parse(responseText);
              
              if (result && result.success) {
                // Show success message
                console.log('Subscription successful!');
                formContainer.classList.add('hidden');
                successMessage.classList.remove('hidden');
              } else {
                console.log(`Submission failed: ${result ? (result.error || 'Unknown error') : 'No result'}`);
                alert('There was an error subscribing. Please try again.');
                
                // Reset button
                submitBtn.innerHTML = originalBtnText;
                submitBtn.disabled = false;
              }
            } catch (error) {
              console.log(`Submission error: ${error.message}`);
              alert(`Error: ${error.message || 'There was a problem with your subscription.'}`);
              
              // Reset form if there was an error
              const submitBtn = form.querySelector('button[type="submit"]');
              if (submitBtn.disabled) {
                submitBtn.innerHTML = 'Subscribe';
                submitBtn.disabled = false;
              }
            }
          });
        }
      });
    </script>
    
    <script>
      // Add a class to body when announcement banner is visible
      document.addEventListener('DOMContentLoaded', () => {
        const banner = document.getElementById('announcement-banner');
        
        if (banner) {
          // Initial check
          if (banner.classList.contains('show')) {
            document.body.classList.add('has-announcement');
          }
          
          // Watch for changes
          const observer = new MutationObserver(() => {
            if (banner.classList.contains('show')) {
              document.body.classList.add('has-announcement');
            } else {
              document.body.classList.remove('has-announcement');
            }
          });
          
          observer.observe(banner, { attributes: true, attributeFilter: ['class'] });
        }
      });
    </script>
  </body>
</html> 